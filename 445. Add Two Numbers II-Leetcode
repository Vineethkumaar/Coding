/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode *p,*c,*temp,*v,*head=NULL;
        
        vector <int> x,y;
    
        int carry=0;
        
        while(l1!=NULL)
        {
            x.push_back(l1->val);
            l1=l1->next;
            
        }
        
         while(l2!=NULL)
        {
            y.push_back(l2->val);
            l2 =l2->next;       
        }
        
       
            
          while(x.size()>0 || y.size()>0)
          {
              int k = x.size()?x.back(): 0; 
              int l= y.size()? y.back() : 0;
        
              int sum= (k+l+carry);
              carry= sum/10;
                                 
              p= new ListNode();
              p->val=sum%10;
              head=p;
              head->next=temp;
              temp=p;
                                 
            if(x.size())
            x.pop_back();
            if(y.size())
            y.pop_back();
                                         
          }
        
         cout<<x.size()<<y.size();
       
        if(carry!=0)
           {
              p=new ListNode();
              p->val=carry;
              head=p;
              head->next=temp; 
            cout<<x.size()<<y.size();
           }
        
        return head;
    }
};
